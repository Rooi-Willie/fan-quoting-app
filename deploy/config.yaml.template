# ============================================================================
# DEPLOYMENT CONFIGURATION TEMPLATE FOR FAN QUOTING APPLICATION
# ============================================================================
# ⚠️  IMPORTANT: This is a TEMPLATE file - copy to config.yaml to use
# 
# HOW TO USE:
# 1. Copy this file to: deploy/config.yaml
# 2. Change all passwords to strong, unique values
# 3. Update API key and other settings as needed
# 4. config.yaml will NOT be committed (it's in .gitignore)
# ============================================================================

# Google Cloud Platform Configuration
gcp:
  project_id: "airblowfans-quoting"
  region: "us-central1"
  zone: "us-central1-a"

# Database Configuration
database:
  instance_name: "fan-quoting-db"
  database_name: "fan_quoting"
  version: "POSTGRES_15"
  
  # ⚠️ CHANGE THESE PASSWORDS!
  credentials:
    app_user: "app_user"
    app_password: "CHANGE_ME_TO_STRONG_PASSWORD"  # Min 16 chars, mixed case, numbers, symbols
    root_user: "postgres"
    root_password: "CHANGE_ME_TO_STRONG_PASSWORD"  # Min 16 chars, mixed case, numbers, symbols
  
  # Database sizing (db-f1-micro = smallest/cheapest)
  tier: "db-f1-micro"  # Shared CPU, 0.6GB RAM
  storage_gb: 10
  storage_type: "SSD"
  
  # Backup settings
  backup:
    enabled: true
    start_time: "03:00"  # 3 AM daily
    retention_days: 7
  
  # Maintenance window
  maintenance:
    day: "SUN"
    hour: 4  # 4 AM Sunday

# API Configuration (Cloud Run)
api:
  service_name: "fan-quoting-api"
  
  # Container settings
  min_instances: 1  # Set to 0 to scale to zero (saves cost)
  max_instances: 3
  memory: "512Mi"
  cpu: 1
  port: 8080
  timeout: 300  # seconds
  
  # ⚠️ API Key for authentication (auto-generated on first run)
  api_key: ""  # Will be generated by setup script
  
  # Environment
  environment: "production"

# Streamlit UI Configuration
streamlit:
  app_name: "airblowfans-quoting"
  
  # Authentication
  allowed_email_domain: "airblowfans.co.za"
  # Or specific emails:
  # allowed_emails:
  #   - "user1@airblowfans.co.za"
  #   - "user2@airblowfans.co.za"

# Domain Configuration
domain:
  name: "airblowfans.org"
  subdomain: "quoting"
  full_domain: "quoting.airblowfans.org"

# Cost Optimization
cost_optimization:
  # Auto-shutdown schedule (saves ~40% on costs)
  auto_shutdown:
    enabled: false  # Set to true to activate scheduling
    
    # Schedule configuration
    schedule:
      stop:
        days: ["Friday"]  # Options: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday
        time: "18:00"     # 24-hour format
      start:
        days: ["Monday"]
        time: "07:00"
  
  # Alternative schedules (copy to 'schedule' above to use)
  preset_schedules:
    business_hours:  # Stop every night, start every morning
      stop: {days: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"], time: "18:00"}
      start: {days: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"], time: "07:00"}
    
    weekends_only:  # Stop Friday evening, start Monday morning
      stop: {days: ["Friday"], time: "18:00"}
      start: {days: ["Monday"], time: "07:00"}
    
    always_on:  # Never stop (highest cost)
      enabled: false

# CSV Data Storage
data_storage:
  # Cloud Storage bucket for CSV files
  bucket_name: "airblowfans-quoting-data"
  csv_source_path: "fan-quoting-app/database/data"
  
  # Tables to initialize from CSV
  csv_tables:
    - "components"
    - "component_parameters"
    - "fan_component_parameters"
    - "fan_configurations"
    - "global_settings"
    - "labour_rates"
    - "materials"
    - "motors_master"
    - "motor_supplier_discounts"
    - "users"

# Monitoring & Alerts
monitoring:
  # Budget alerts
  budget:
    monthly_limit_usd: 20
    alert_thresholds: [50, 90, 100]  # Percentage
  
  # Logging
  log_level: "INFO"  # DEBUG, INFO, WARNING, ERROR
  
  # Testing after deployment
  post_deployment_tests:
    enabled: true
    timeout: 30  # seconds

# GitHub Configuration
github:
  repository: "Rooi-Willie/fan-quoting-app"
  branch: "main"

# Deployment Settings
deployment:
  # Confirm before destructive actions
  require_confirmation: true
  
  # Auto-rollback on failure
  auto_rollback: true
  
  # Deployment timeout
  timeout_minutes: 15
